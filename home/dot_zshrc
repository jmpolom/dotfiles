#!/bin/zsh

if [[ "$PATH" != "$HOME/.local/bin" ]]; then
    PATH="$HOME/.local/bin:$PATH"
fi

if [[ -d "/opt/homebrew" ]]; then
    export HOMEBREW_PREFIX="/opt/homebrew"
    export HOMEBREW_CELLAR="/opt/homebrew/Cellar"
    export HOMEBREW_REPOSITORY="/opt/homebrew"
    export PATH="/opt/homebrew/bin:/opt/homebrew/sbin${PATH+:$PATH}"
    export MANPATH=":${MANPATH#:}"
    export INFOPATH="/opt/homebrew/share/info:${INFOPATH:-}"
fi

if command -v go &> /dev/null; then
    GOPATH="$(go env GOPATH)"
    export GOPATH
    export PATH="$GOPATH/bin:$PATH"
fi

# update fpath for homebrew completions
if command -v brew &>/dev/null; then
    FPATH="$(brew --prefix)/share/zsh/site-functions:$FPATH"
fi

# get uname: [Linux, Darwin]
uname="$(uname)"

setopt APPEND_HISTORY
setopt MULTIBYTE
setopt PROMPT_SUBST

HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# setup completion
autoload -Uz compinit compaudit
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots) # include hidden files

# local chezmoi, so directly source the completions
if [[ $(command -v chezmoi) =~ '.local/bin' ]]; then
    source =(chezmoi completion zsh)
    compdef _chezmoi chezmoi
fi

# fzf
if command -v fzf &> /dev/null; then
    if [[ "$uname" == "Darwin" ]]; then
        fzf_keybindings_path="${HOMEBREW_PREFIX:-/opt/homebrew}/opt/fzf/shell/key-bindings.zsh"
        fzf_completion_path="${HOMEBREW_PREFIX:-/opt/homebrew}/opt/fzf/shell/completion.zsh"
    # works for fedora, might have to edit if another distro
    elif [[ "$uname" == "Linux" ]]; then
        fzf_keybindings_path="/usr/share/fzf/shell/key-bindings.zsh"
        fzf_completion_path="/usr/share/zsh/site-functions/fzf"
    fi

    export FZF_DEFAULT_COMMAND='fd --hidden --follow' # use with fd instead of find
    [[ -f "$fzf_keybindings_path" ]] && source "$fzf_keybindings_path"
    [[ -f "$fzf_completion_path" ]] && source "$fzf_completion_path"
fi

# correct keymapping issues on Linux -- why is this only needed for zsh?!
# also wonky and unifxed: insert, page-up, page-down
if [[ "$uname" == "Linux" ]]; then
    bindkey '^[[3~' delete-char
    bindkey '^[[H' beginning-of-line
    bindkey '^[[F' end-of-line
fi

# macOS only aliases
if [[ "$uname" == "Darwin" ]]; then
    alias ls='gls --color=auto --group-directories-first'
    alias sed='gsed'
elif [[ "$uname" == "Linux" ]]; then
    alias ls='ls --color=auto --group-directories-first'
fi

# everything aliases
alias la='ls -A'
alias ll='ls -Alh'

# default editor
export EDITOR='nvim'
export VISUAL='nvim'

# DarkSlateGray3
user_color='%F{116}'
# SkyBlue2
host_color='%F{111}'
# NavajoWhite1
cwd_color='%F{223}'
clear_color='%f'

# vcs info
# DarkSeaGreen3
branch_color='%F{114}'
# LightCoral
act_color='%F{210}'

vcs_format="(${branch_color}%b${clear_color}${act_color}%c%u${clear_color})"
action_vcs_format="(${branch_color}%b${clear_color}|${act_color}%a${clear_color})"

autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' formats "$vcs_format"
zstyle ':vcs_info:*' actionformats "$action_vcs_format"
zstyle ':vcs_info:*' stagedstr " +"
zstyle ':vcs_info:*' unstagedstr " *"
zstyle ':vcs_info:*' check-for-changes true # never seems to show unstaged?
#zstyle ':vcs_info:*' check-for-staged-changes true
#zstyle ':vcs_info:*' get-unapplied true
#zstyle ':vcs_info:*' get-revision true

precmd() { vcs_info }

# user@hostname:cwd$ with colors
export PS1="${user_color}%n${clear_color}@${host_color}%m${clear_color}:${cwd_color}%1~${clear_color}\$ "
# non-zero-return vcs_info
export RPS1="${act_color}%0(?,,%? )${clear_color}\${vcs_info_msg_0_}"
export PS2="${user_color}>${clear_color} "
